b <- c(7,10)
x <- solve(A)%*%b
x
B1 <- matrix(c(1,-1,2-1), ncol=2, byrow=T)
b1 <- c(2,3)
X <- solve(B1)%*%b1
B1 <- matrix(c(1,-1,2,-1), ncol=2, byrow=T)
b1 <- c(2,3)
X <- solve(B1)%*%b1
X
B1 <- matrix(c(1,-1,-1,2), ncol=2, byrow=T)
b1 <- c(2,3)
X <- solve(B1)%*%b1
X
View(X)
View(B)
rm(list=ls())
rm(list=ls())
x1 <- c(2,4,5,8,1,12,23,34)
class(x1)
mat1 <- matrix(data =1:9, nrow=3, ncol=3)
mat2 <- matrix(data=1:9, ncol=3)
mat1
mat2
mat3 <- matrix(data=1:9, nrow=3)
mat3
mat3 <- matrix(data=1:15, nrow=5, byrow= TRUE,
dimnames=list(c("r1", "r2","r3","r4","r5"), c("c1","c2","c3")))
mat3
class(mat3)
dim(mat3)
Dimensiones <- dim(mat3)
Dimensiones
Dimensiones[1]
Dimensiones[2]
colnames(mat3)
rownames(mat3)
help("sample")
mat4 <- matrix(data=sample(1:129,9), ncol=3)
mat4
mat4[2,2] #
mat4[,3]
mat4[3,]
mat4[2,2] <- pi
mat4
-1:1/0 #NaN es no a number
x <- NA
x
rm(list=ls())
x <- runif(1, 0, 10)
x
help("runif")
r <- runif(10,0,10)
r
x <- runif(1, 0, 10)
if(x>5){
y <- TRUE
}else{
y <- FALSE
}
x
x <- runif(1, 0, 10)
if(x<5){
y <- TRUE
}else{
y <- FALSE
}
x
help("print")
for(i in 1:5){
print(i)
}
i
i
sessionInfo()
m1 <- matrix(1:12, ncol=3, byrow=T, dimnames=list(c("r1","r2","r3","r4"), c("c1","c2","c3")))
m1
m1 <- matrix(1:12, ncol=3, byrow=T, dimnames=list(c("r1","r2","r3","r4"),
c("c1","c2","c3")))
m1[1,1]
m1[,c(2,3)]
m1[,c(2,3)] #Selecionar las columnas 2 y 3
class(m1[,c(2,3)])
class(m1)
m1[,c(-1,-3),drop=F]
m1[,c(-1,-3)]
m1[,c(-1,-3),drop=F]
sel <- matrix(rep(x(T,F),6),4,3)
sel <- matrix(rep(c(T,F),6),4,3)
sel
r <- c(1:7)
r
rep(r, 4) #
rep(1:7, 4)
rep(c("Hola", "a", "todos"), times=5) #
rep(c("Hola", "a", "todos"), each=3)
rep(c("Hola", "a", "todos"), times=c(3,2,5))
sel
sel <- matrix(rep(c(T,F),3),4,3)
sel
sel <- matrix(rep(c(T,F),2),4,3)
sel
sel <- matrix(rep(c(T,F),6),4,2)
sel
sel <- matrix(rep(c(T,F),6),4,4)
sel
sel <- matrix(rep(c(T,F),2),4,4)
sel
sel <- matrix(rep(c(T,F),3),4,3)
sel
m1[sel]
View(m1)
sel <- matrix(rep(c(F,T),3),4,3)
m1[sel]
sel <- matrix(rep(c(T,F),3),4,3)
m1[sel]
sel
ncol(m1)
nrow(m1)
t(m1)
m1
diag(m1)
help(col())
help("col")
col(m1)
m1
col(sel)
m1[,2]
m1[,2, drop=F]
cbind(1,m1)
cbind(1:2,m1)
cbind(rep(1:3),m1)
cbind(rep(1:2,2),m1)
cbind(1:3,1:6)
cbind(1:3,1:6,1:12)
apply(m1,1,sum)
m1
apply(m1,2,sum)
apply(m1,2,sum, drop=F)
apply(m1,1,sum, drop=F)
m1
apply(m1,1,sum,)
m1
apply(m1,1,sum)
apply(m2,2,sum)
apply(m1,2,sum)
apply(m1,2,mean) #
x <- runif(1,0,10) if (x>5) {
y <- T
}
x <- runif(1,0,10) if (x>5) {
y <- T}
x <- runif(1,0,10) if (x>5) {
y <- T
}
x <- runif(1,0,10) if (x>5) {
y <- T
} else {
y <- F
}
x <- runif(1,0,10)
if (x>5) {
y <- TRUE
}else{
y <- FALSE
}
x <- runif(1,0,10) if (x>5) {
y <- TRUE
} else {
y <- FALSE
}
x <- runif(1,0,10)
if (x>5) {
y <- TRUE
} else {
y <- FALSE
}
x
y
y
x <- runif(1,0,10)
if (x>5) {
y <- TRUE
} else {
y <- FALSE
}
x
y
q = runif(10,0,20)
q
help(runif)
q <- runif(10,0,20) #10 es el
q
VectorBoolaono <- (q>=14)
VectorBoolaono
class(VectorBoolaono)
q <- runif(10,0,20) #
VectorBoolaono <- (q>=14) #
VectorBoolaono
NumAprobados1 <- sum(VectorBoolaono)
NumAprobados1
NumAprobados2 <- length(VectorBoolaono[VectorBoolaono==T])
NumAprobados2
NumAprobados2 <- length(VectorBoolaono[VectorBoolaono=T])
NumAprobados2
NumAprobados2 <- length(VectorBoolaono[VectorBoolaono==T])
NumAprobados2
which(VectorBoolaono)
if (NumAprobados1>0){
q[which(VectorBoolaono)]
}
VectorBoolaono
NumAprobados1
q
help("which")
help("system.time")
system.time(sum(VectorBoolaono))
VectorBoolaono
system.time(length(VectorBoolaono[VectorBoolaono==T]))
x <- c("¿Qué","es","VERDAD?")
if("Verdad" %in% x){
print("Verdad se encontró en IF")
} else if("VERDAD" %in% x){
print("VERDAD se encontró en IF_ELSE")
} else{
print("No se econtró la VERDAD")
}
x <- c("¿Qué","es","VERDAD?")
if("Verdad" %in% x){
print("Verdad se encontró en IF")
} else if("VERDAD" %in% x){
print("VERDAD se encontró en IF_ELSE")
} else{
print("No se econtró la VERDAD")
}
x <- c("¿Qué","es","VERDAD?")
if("Verdad" %in% x){
print("Verdad se encontró en IF")
} else if("VERDAD" %in% x){
print("VERDAD se encontró en IF_ELSE")
} else{
print("No se econtró la VERDAD")
}
x <- c("¿Qué","es","VERDAD?")
if("Verdad" %in% x){
print("Verdad se encontró en IF")
} else if("VERDAD" %in% x){
print("VERDAD se encontró en IF_ELSE")
} else{
print("No se econtró la VERDAD")
}
x <- c("¿Qué","es","VERDAD?")
if("Verdad" %in% x){
print("Verdad se encontró en IF")
} else if("VERDAD" %in% x){
print("VERDAD se encontró en IF_ELSE")
} else{
print("No se econtró la VERDAD")
}
x <- c("¿Qué","es","VERDAD?")
if("Verdad" %in% x){
print("Verdad se encontró en IF")
} else if("VERDAD" %in% x){
print("VERDAD se encontró en IF_ELSE")
} else{
print("No se econtró la VERDAD")
}
x <- c("¿Qué","es","VERDAD?")
if("Verdad" %in% x){
print("Verdad se encontró en IF")
} else if("VERDAD" %in% x){
print("VERDAD se encontró en IF_ELSE")
} else{
print("No se econtró la VERDAD")
}
x <- c("¿Qué","es","VERDAD?")
if("VERDAD?" %in% x){
print("verdad se encontró en IF")
} else if("VERDAD?" %in% x){
print("VERDAD se encontró en IF_ELSE")
} else{
print("No se econtró la VERDAD")
}
x <- c("¿Qué","es","VERDAD?")
if("VERDAD?" %in% x){
print("verdad se encontró en IF")
} else if("VERDAD?" %in% x){
print("VERDAD se encontró en IF_ELSE")
} else{
print("No se econtró la VERDAD")
}
x <- c("¿Qué","es","VERDAD?")
if("VERDAD?" %in% x){
print("verdad se encontró en IF")
} else if("VERDAD?" %in% x){
print("VERDAD se encontró en IF_ELSE")
} else{
print("No se econtró la VERDAD")
}
x <- c("¿Qué","es","VERDAD?")
if("VERDAD?" %in% x){
print("verdad se encontró en IF")
} else if("VERDAD?" %in% x){
print("VERDAD se encontró en IF_ELSE")
} else{
print("No se econtró la VERDAD")
}
x <- c("¿Qué","es","VERDAD?")
if("VERDAD?" %in% x){
print("verdad se encontró en IF")
} else if("VERDAD?" %in% x){
print("VERDAD se encontró en IF_ELSE")
} else{
print("No se econtró la VERDAD")
}
x <- c("¿Qué","es","VERDAD?")
if("VERDAD?" %in% x){
print("verdad se encontró en IF")
} else if("VERDAD?" %in% x){
print("VERDAD se encontró en IF_ELSE")
} else{
print("No se econtró la VERDAD")
}
x <- c("¿Qué","es","VERDAD?")
if("VERDAD?" %in% x){
print("verdad se encontró en IF")
} else if("VERDAD?" %in% x){
print("VERDAD se encontró en IF_ELSE")
} else{
print("No se econtró la VERDAD")
}
x <- c("¿Qué","es","VERDAD?")
if("VERDAD?" %in% x){
print("verdad se encontró en IF")
} else if("VERDAD?" %in% x){
print("VERDAD se encontró en IF_ELSE")
} else{
print("No se econtró la VERDAD")
}
x <- c("¿Qué","es","VERDAD?")
if("VERDAD?" %in% x){
print("verdad se encontró en IF")
} else if("VERDAD?" %in% x){
print("VERDAD se encontró en IF_ELSE")
} else{
print("No se econtró la VERDAD")
}
library()
install.packages("gclus")
library(gclus)
help(package = gclucs)
help(package = "gclucs")
help(package = "gclucs")
library(gclus) #Esto es para empezar a utilizarlo
help(package = "gclucs")
help(package = "gclus")
es.par <- function(numero){
residuo <- numero %% 2
if (residuo==0)
return(TRUE)
return(FALSE)
}
es.par(25)
es.par(12482)
es.impar <- function(número){
residuo <- número %% 2
if (residuo!=0)
return(TRUE)
return(FALSE)
}
es.impar(15)
es.impar(20)
es.divisible.por <- function(entero.grande,entero.pequeño){
if(entero.grande %% entero.pequeño !=0)
return(FALSE)
return(TRUE)
}
es.divisible.por(40,10)
es.divisible.por(53,25)
es.par <- function(num){
es.divisible.por(num,2)
}
es.par(47)
getwd()
setwd("C:/Users/Usuario/Desktop/Clases_de_R/Prácticas")
getwd()
ls()
dir()
Forbes2014 <- read.csv("Forbes2014.csv")
Forbes2014
View(Forbes2014)
Forbes2014 <- read.csv("Forbes2014.csv", header=T)
Forbes2014
View(Forbes2014)
class(Forbes2014)
head(Forbes2014)
str(Forbes2014)
library("rnoaa")
install.packages("rnoaa")
library("rnoaa")
install.packages("WDI")
library(WDI)
indicadores <- WDIsearch("gdp")
indicadores
class(indicadores)
View(indicadores)
dim(indicadores)
View(indicadores)
View(indicadores)
indicadores[70]
indicadores[70,2]
agricu.porc.pib <- WDI(contry = "all", indicator = indicadores[70,1],
start = 2005, end = 2017)
agricu.porc.pib
agricu.porc.pib <- WDI(contry = " all", indicator = indicadores[70,1],
start = 2005, end = 2017)
agricu.porc.pib <- WDI(country  = " all", indicator = indicadores[70,1],
start = 2005, end = 2017)
agricu.porc.pib
View(agricu.porc.pib)
indicadores[70,2]
class(agricu.porc.pib)
dim(agricu.porc.pib)
peru <- agricu.porc.pib$NV.AGR.TOTL.ZS[agricu.porc.pib$country=="Peru"]
peru
rm(list=ls())
datos <- read.table("DataStat", header=T)
dir()
datos <- read.table("DataStat.txt", header=T)
datos
tabla.peso <- table(datos$Peso)
tabla.peso
table(datos$Peso)
View(tabla.peso)
class(datos)
class(datos$Peso)
prop.table(datos$Peso)
tabla.nombre <- table(datos$Nombres)
tabla.nombre
prop.table(datos$Nombres)
prop.table(tabla.nombre)
1/14
pie(table(datos$Edad), main = "Diagrama de sectores para la variable Edad")
pie(datos$Edad, main = "Diagrama de sectores para la variable Edad")
datos$Edad
pie(prop.table(datos$Edad), main = "Diagrama de sectores para la variable Edad") #
pie(table(datos$Edad), main = "Diagrama de sectores para la variable Edad") #Es muy
pie(prop.table(datos$Edad), main = "Diagrama de sectores para la variable Edad") #Es muy
table.edad <- table(datos$Edad)
pie(prop.table(table.edad), main="Diagrama de sectores para la variable Edad")
prop.table.edad <- prop.table(table.edad)
prop.table.edad
pie(prop.table.edad, main="Diagrama de sectores para la variable Edad")
barplot(table(datos$Edad), main="Diagrama de barras para la variable Edad")
pie(table(datos$Edad), main = "Diagrama de sectores para la variable Edad")
barplot(table(datos$Edad), main="Diagrama de barras para la variable Edad")
table(datos$Sexo,datos$Edad)
View(table(datos$Sexo,datos$Edad))
barplot(table(datos$Sexo,datos$Edad), col = c(2,3))
barplot(table(datos$Edad), main="Diagrama de barras para la variable Edad")
barplot(table(datos$Sexo,datos$Edad), col = c(2,3))
hist(table(datos$Edad), col="blue", main="Histograma para la variable Edad",
xlab="Edad", ylab="Frecuencia")
hist(datos$Edad, col="blue", main="Histograma para la variable Edad",
xlab="Edad", ylab="Frecuencia")
hist(table(datos$Edad), col="blue", main="Histograma para la variable Edad",
xlab="Edad", ylab="Frecuencia")
boxplot(datos$Edad, xlab="Edad", main="Boxplot para la variable Edad")
library(mtcars)
help(mtcars)
mtcars
class(mtcars)
mpg <- mtcars$mpg
mpg
summary(mpg)
summary(mtcars)
getwd()
rm(list=ls())
datos <- read.table("DataStat.txt", header=T) #Nunca te
mean(peso, na.rm = F)
mean(datos$Peso, na.rm = F)
median(datos$Peso,na.rm = F)
mode <- function(x){
ux <- unique(X)
ux[which.max(tabulate(match(x,ux)))]
}
mode(datos$Peso)
mode <- function(x){
ux <- unique(x)
ux[which.max(tabulate(match(x,ux)))]
}
mode(datos$Peso)
quantile(datos$Peso, probs = c(0.25, 0.75))
min(datos$Peso)
max(datos$Peso)
var(datos$Peso,na.rm = T)
sd(datos$Peso, na.rm = T)
IQR(datos$Peso, na.rm = T)
help(IQR)
skewness(datos$Peso)
library(moments)
skewness(datos$Peso)
barplot(table(datos$Peso))
barplot(datos$Peso)
barplot(table(datos$Peso))
median(datos$Peso)
kurtosis(datos$Peso)
kurtosis(datos$Peso) - 3
getwd()
setwd("C:/Users/Usuario/Desktop/Clases_de_R/Prácticas/Clase_1")
barplot(table(datos$Peso))#con
kurtosis(datos$Peso)
